kind: pipeline
name: default

workspace:
  base: /go
  path: src/github.com/oliver006/drone-gcf

steps:
  - name: test
    image: "golang:1"
    environment:
      COVERALLS_TOKEN:
        from_secret: coveralls-token
    commands:
      - 'echo " ! gofmt -d *.go 2>&1 | read " | bash'
      - 'go vet ./...'
      - "go build"
      - "go test -v -covermode=atomic -cover -race -coverprofile=coverage.txt"
      - "go get github.com/mattn/goveralls"
      - "/go/bin/goveralls -v -coverprofile=coverage.txt -service=drone.io"
    when:
      event:
        - push


  - name: build-and-publish-tst
    image: plugins/docker
    settings:
      tags: "tst-${DRONE_COMMIT_SHA}"
      dockerfile: ./Dockerfile
      repo: oliver006/drone-gcf
      target: release
      debug: true
      build_args:
        - 'TAG=tst-${DRONE_COMMIT_SHA}'
        - 'SHA1=${DRONE_COMMIT_SHA}'
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - push


  - name: sleep-4s
    image: alpine
    commands:
      - sleep 4
    when:
      event:
        - push


  - name: deploy-cloud-function-tst
    image: "oliver006/drone-gcf:tst-${DRONE_COMMIT_SHA}"
    pull: true
    settings:
      env_secret_api_key:
        from_secret: env_secret_api_key
      action: deploy
      token:
        from_secret: token
      functions:
        - TestDeployment:
          - trigger: http
            memory: 128MB
            runtime: go111
            source: ./test-function/
            environment:
              - REGULAR_ENV_VAR: env_var_123
                BUILD_HASH: "${DRONE_COMMIT_SHA}"
                ENV_VAR_WITH_SPACE: "oh noes"
                ENV_VAR_WITH_QUOTES: 'oh " my'
                ENV_VAR_WITH_COMMA: 'oh , well'
    when:
      event:
        - push


  - name: test-deployed-test-function-tst
    image: "golang:1"
    environment:
      GCF_URL: "https://us-central1-phone-21zoo-com.cloudfunctions.net/TestDeployment"
      BUILD_HASH: "${DRONE_COMMIT_SHA}"
    commands:
      - "sleep 10"
      - "cd test-function && go test -v"
    when:
      event:
        - push


  - name: delete-test-cloud-function-tst
    image: "oliver006/drone-gcf:tst-${DRONE_COMMIT_SHA}"
    pull: true
    settings:
      action: delete
      functions: [TestDeployment]
      token:
        from_secret: token
    when:
      event:
        - push


  - name: delete-tst-docker-tag
    image: alpine
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
      IMAGE_TAG: "tst-${DRONE_COMMIT_SHA}"
    commands:
      - "apk add --no-cache curl jq"
      - "./delete-docker-tag.sh"
    when:
      status: [ success, failure ]
      event:
        - push


  - name: build-and-publish-master
    image: plugins/docker
    settings:
      tags: master
      dockerfile: ./Dockerfile
      repo: oliver006/drone-gcf
      target: release
      debug: true
      build_args:
        - 'TAG=master'
        - 'SHA1=${DRONE_COMMIT_SHA}'
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      branch:
        - master
      event:
        - push


  # sleep 10 seconds to give the docker registry a few moments to ingest the new image
  # so on the next step it hopefully will be downloaded and used
  - name: sleep-10s
    image: alpine
    commands:
      - sleep 10
    when:
      branch:
        - master
      event:
        - push


  - name: deploy-test-cloud-function
    image: oliver006/drone-gcf:master
    pull: true
    settings:
      action: deploy
      token:
        from_secret: token
      functions:
        - TestDeployment:
          - trigger: http
            memory: 128MB
            runtime: go111
            source: ./test-function/
    when:
      branch:
        - master
      event:
        - push


  # sleep again for 15 seconds to give GCF time to bring up the new function
  - name: sleep-15s
    image: alpine
    commands:
      - sleep 15
    when:
      branch:
        - master
      event:
        - push


  - name: test-deployed-test-function
    image: "golang:1"
    environment:
      GCF_URL: "https://us-central1-phone-21zoo-com.cloudfunctions.net/TestDeployment"
    commands:
      - "cd test-function && go test -v"
    when:
      branch:
        - master
      event:
        - push


  - name: delete-test-cloud-function
    image: "oliver006/drone-gcf:master"
    pull: true
    settings:
      action: delete
      functions: [TestDeployment]
      token:
        from_secret: token
    when:
      status: [ success, failure ]
      branch:
        - master
      event:
        - push


  - name: build-and-publish-tagged
    image: plugins/docker
    settings:
      tags: "latest,${DRONE_TAG}"
      dockerfile: ./Dockerfile
      repo: oliver006/drone-gcf
      target: release
      debug: true
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - tag
